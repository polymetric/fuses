FuRegisterClass("TimeAverage", CT_Tool, {
   REGS_Category = "TimeAverage",
   REGS_OpIconString = "TA",
   REGS_OpDescription = "Averages between every frame on the timeline",
   REG_OpNoMask = true,
   REG_NoBlendCtrls = true,
   REG_NoObjMatCtrls = true,
   REG_NoMotionBlurCtrls = true,
})

function Create()
	InputLink = self:AddInput("Input", "Input", {
		LINKID_DataType = "Image",
		LINK_Main = 1,
	})
	
	OutputLink = self:AddOutput("Output", "Output", {
		LINKID_DataType = "Image",
		LINK_Main = 1,
	})
end

function Process(req)
	local input = InputLink:GetValue(req)
	local output = Image({IMG_Like = input, IMG_Depth = 8})
	
	output:Fill(Pixel({R = 0.0, G = 0.0, B = 0, A = 1}))
	
	local nextframe = nil
	local frame_counter = 0
	
	repeat
		nextframe = InputLink:GetSource(req.Time + frame_counter)
		output:Merge(nextframe, {
			MO_ApplyMode = "Merge",
			MO_ApplyOperator = "Over",
			-- MO_XOffset = (center.X - 0.5) * i + 0.5 + jct.X,
			-- MO_YOffset = (center.Y - 0.5) * i + 0.5 + jct.Y,
			-- MO_XAxis = axis.X + jax.X, 
			-- MO_YAxis = axis.Y + jax.Y,
			-- MO_XSize = math.pow(xsize, i) * (1 + jszx),
			-- MO_YSize = math.pow(ysize, i) * (1 + jszy),
			-- MO_Angle = angle * i + jan,
			MO_FgAddSub = 1,
			-- MO_FgRedGain   = rg * bl + jgnr,
			-- MO_FgGreenGain = gg * bl + jgng,
			-- MO_FgBlueGain  = bg * bl + jgnb,
			MO_FgAlphaGain = 0,
			-- MO_BurnIn = burn,          
		})
		frame_counter = frame_counter + 1
	until (not nextframe or frame_counter >= 10)
	
	output:Gain(1/frame_counter, 1/frame_counter, 1/frame_counter, 1)
	
	OutputLink:Set(req, output)
end
