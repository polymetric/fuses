FuRegisterClass("Switch", CT_Tool, {
   REGS_Category = "Color",
   REGS_OpIconString = "SW",
   REGS_OpDescription = "Pass through if the image is greater or lesser than a certain value",
   REG_OpNoMask = true,
   REG_NoBlendCtrls = true,
   REG_NoObjMatCtrls = true,
   REG_NoMotionBlurCtrls = true,
})

function Create()
	InMode = self:AddInput("Mode", "Mode", {
		LINKID_DataType = "Number",
		INPID_InputControl = "ComboControl",
		INP_Default = 0,
		{ CCS_AddString = "Keep above", },
		{ CCS_AddString = "Keep below", },
		CC_LabelPosition = "Horizontal",	
		ICD_Width = 0.5,
		INP_DoNotifyChanged = true,
	})

	InThreshold = self:AddInput("Threshold", "Threshold", {
		LINKS_Name = "Threshold",
		LINKID_DataType = "Number",
		INPID_InputControl = "SliderControl",
		INP_MaxScale = 1.0,
		INP_MinScale = 0.0,
		INP_Default = 0.5,
		ICD_Center = 0.5,
	})
	
	InputLink = self:AddInput("Input", "Input", {
		LINKID_DataType = "Image",
		LINK_Main = 1,
	})
	
	OutputLink = self:AddOutput("Output", "Output", {
		LINKID_DataType = "Image",
		LINK_Main = 1,
	})
end

function f(p, threshold, mode)
	if mode == 0 then
		if p.R < threshold or p.G < threshold or p.B < threshold then
			return 0
		else
			return 1
		end
	else
		if p.R > threshold or p.G > threshold or p.B > threshold then
			return 0
		else
			return 1
		end
	end
end

function Process(req)
	local input = InputLink:GetValue(req)
	local output = Image({IMG_Like = input, IMG_Depth = 8})
	
	local mode = InMode:GetValue(req).Value
	local threshold = InThreshold:GetValue(req).Value
	
	print(mode)
	
	output:ProcessPixels(0, 0, input.Width, input.Height, input, function(x, y, p)
		p.A = f(p, threshold, mode)
		if p.A == 0 then
			p.R = 0
			p.G = 0
			p.B = 0
		end
		return p
	end)
	
	OutputLink:Set(req, output)
end
